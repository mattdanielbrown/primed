/*
 * Buttons
 *
 * Buttons and button-like elements.
 **/


$fallback-font            : system-ui, -apple-system, BlinkMacSystemFont,
                            Helvetica Neue, Helvetica, Arial, sans-serif !default;
$font-family              : $fallback-font                               !default;

//$primary-color		: #6200ea										      !default;
$secondary-color	: #263238										      !default;
$base-font-size		: 18px 											      !default;
$button-font-size	: $base-font-size 	              !default;
$button-font			: $font-family 				            !default;
$button-duration  : 80ms 											      !default;
$button-transform : translate3d(0, 2px, 0);
$focus-style-color:	rgba($primary-color, 0.3);
$focus-style      : 0 0 0 3px $focus-style-color;

%custom-focus-effect { box-shadow: $focus-style; }

// Functions
//=========================================================//
@function focusColor($originalColor: $primary-color) {
  @return darken($originalColor, 5%);
}
@function hoverColor($originalColor: $primary-color) {
  @return darken($originalColor, 10%);
}
@function activeColor($originalColor: $primary-color) {
  @return darken($originalColor, 20%);
}

// Mixins
//=========================================================//
@mixin button($basecolor:$primary-color,$style: solid,$block: false) {
  // "Generate" (or 'Get') Adjusted Colors For Interaction States
  $_hover-color: hoverColor($basecolor);
  $_focus-color: focusColor($basecolor);
  $_active-color: activeColor($basecolor);
  // All the normal, default stuff ....
  letter-spacing: 1px;
  font-family: $button-font;
  font-weight: 700;
  letter-spacing: 1px;
  font-size: $button-font-size;
  appearance: none !important;
  -webkit-tap-highlight-color: rgba($basecolor, 0) !important;
  transition: all $button-duration linear;
  backface-visibility: hidden;
  transform: scale3d(1, 1, 1);
  line-height: 2.25 !important;
  cursor: pointer;
  //text-wrap: nowrap !important;
  //line-break: not-allowed !important;
  user-select: none !important;
  border-radius: 3px;
  text-decoration: none !important; // Important for links!

  // ... If it's a BLOCK button ...
  @if ($block == true) {
    width: 100% !important;
    margin: 1em 0 !important;
    line-height: 3 !important;
    padding: 0 !important;
  } @else {
    margin: 1em 1em 1em 0;
    padding: 0 1em;
    width: unset !important;
    //margin : 1em;
    min-width: 8em;
    //height : 48px;
    line-height: 2.5 !important;
    display: inline-block;
  }
  // ... If it's an OUTLINE button ...
  @if ($style == outline) {
    background: transparent;
    color: $basecolor;
    border: $basecolor solid 2px;
    &:focus {
      background: rgba($basecolor, 0.1);
      color: $_focus-color;
      border-color: $_focus-color;
      outline: rgba($_focus-color, 0.25) solid 4px;
      outline-offset: 2px;
    }
    &:hover {
      // background: transparent;
      background: rgba($basecolor, 0.15);
      color: $_hover-color;
      border-color: $_hover-color;
    }
    &:active {
      // background: transparent;
      background: rgba($basecolor, 0.3);
      // background: $_active-color;
      border-color: $_active-color;
      color: $_active-color;
    }
  } @else {
    background: $basecolor;
    border: $basecolor solid 2px;
    color: white;
    &:focus {
      background: $_focus-color;
      border-color: $_focus-color;
      outline: rgba($_focus-color, 0.25) solid 4px;
      outline-offset: 2px;
    }
    &:hover {
      background: $_hover-color;
      border-color: $_hover-color;
    }
    &:active {
      background: $_active-color;
      border-color: $_active-color;
    }
  }

  // Minor vertical type spacing adjustment hack
  padding-top: 1px !important;
  // Additional, optional transform during `:ACTIVE` state
  &:focus { @extend %custom-focus-effect; }
  &:active {
    // transform: scale3d(0.98, 0.98, 0.98);
    // transition-duration: 0 !important;
    // transform: translate3d(0, 4px, 0);
    transform: $button-transform;
  }
  // [ONLY FOR DEMO]:
  // Temporarily disable all OUTLINE styles
  outline: none !important;
}

// Styles
//=========================================================//
//  ~ General, default, and ALL buttons
#{$buttons} {

  @include button($block: true);
  &.rounded { border-radius: 50px !important; }
  @include small-breakpoint {
    @include button($block: false);
  }
}
//  ~ Types of buttons; Specific styles
.secondary {
  @include button($basecolor: $secondary-color);
}
.text-only {
  @include button($style: outline);
  background: transparent;
  border-color: transparent !important;
}
.outline {
  @include button($style: outline);
}
.button-list {
  list-style: none !important;
  width: 100%;
  margin: 0 auto 2em auto;
  padding: 1em 0;
  display: flex;
  flex-direction: row;
  align-items: center;
  align-content: center;
  justify-content: space-between;
  flex-wrap: wrap;
  @media (min-width: 900px) {
    flex-wrap: nowrap;
  }
  transition: all 300ms;
  transition-delay: 300ms;
  li {
    list-style: none !important;
    margin: auto;
    margin-bottom: 1em;
    text-align: center;
    transition: all 300ms;
    transition-delay: 300ms;
    @media (max-width: 480px) {
      width: 100% !important;
      display: block !important;
      padding: 0 !important;
      margin: 0.5em 0 !important;
    }
    @media (min-width: 480px) {
      display: inline-block;
      // margin-right: 1em;
      margin: 1em;
      width: auto !important;
    }
    button {
      width: 100% !important;
      margin: 0 auto !important;
      width: 100% !important;
      @media (min-width: 480px) {
      }
    }
  }
}

